{"version":3,"sources":["pages/Register.tsx"],"names":["RegisterPage","props","state","email","password","error","handleRegister","handleInput","bind","doRegister","event","console","log","registerUser","this","then","data","doLogin","history","push","catch","elm","target","setState","name","value","type","placeholder","onChange","variant","color","disabled","onClick","React","Component","connect","dispatch","bindActionCreators","userReduxActions","withRouter"],"mappings":"kPAQMA,E,kDAOF,WAAYC,GAAY,IAAD,8BACnB,cAAMA,IAPVC,MAAQ,CACJC,MAAO,GACPC,SAAU,GACVC,MAAQ,IAGW,EADvBC,oBACuB,EAEnB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAHC,E,uDAKZE,GAAgC,IAAD,OACtCC,QAAQC,IAAI,qBACZC,YACIC,KAAKZ,MAAMC,MACXW,KAAKZ,MAAME,UACbW,MAAK,SAACC,GACJ,EAAKf,MAAMgB,QAAQD,GACnB,EAAKf,MAAMiB,QAAQC,KAAK,QACzBC,OAAM,SAACf,GACNM,QAAQN,MAAM,QAASA,Q,kCAGnBK,GACR,IAAIW,EAAMX,EAAMY,OAChBR,KAAKS,SAAL,eACKF,EAAIG,KAAQH,EAAII,U,+BAIrB,OACI,gCACI,uBAAOC,KAAK,OAAOF,KAAK,QAAQG,YAAY,gBAAgBF,MAAOX,KAAKZ,MAAMC,MAAOyB,SAAUd,KAAKP,cACpG,uBACA,uBAAOmB,KAAK,WAAWF,KAAK,WAAWG,YAAY,WAAWF,MAAOX,KAAKZ,MAAME,SAAUwB,SAAUd,KAAKP,cACzG,uBACA,cAAC,IAAD,CAAQsB,QAAQ,YAAYC,MAAM,UAAUC,WAAYjB,KAAKZ,MAAMC,OAASW,KAAKZ,MAAME,UAAW4B,QAASlB,KAAKL,WAAhH,6B,GArCWwB,IAAMC,WA0ClBC,sBACX,MACA,SAAAC,GAAQ,OAAIC,YAAmBC,EAAkBF,KAFtCD,CAGbI,YAAWvC","file":"static/js/8.b2a4f89e.chunk.js","sourcesContent":["import React, {ChangeEvent, MouseEvent} from 'react'; \r\nimport Button from '@material-ui/core/Button';\r\nimport {registerUser} from '../Services/Firebase';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as userReduxActions from '../redux/actions/UserActions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass RegisterPage extends React.Component<any, any> {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        error : \"\"\r\n    }\r\n    handleRegister: void;\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.doRegister = this.doRegister.bind(this);\r\n    }\r\n    doRegister(event:MouseEvent<HTMLElement>) {\r\n        console.log(\"going to register\");\r\n        registerUser(\r\n            this.state.email,\r\n            this.state.password\r\n        ).then((data) => {\r\n            this.props.doLogin(data);\r\n            this.props.history.push(\"/\");\r\n        }).catch((error) => {\r\n            console.error(\"error\", error);\r\n        });\r\n    }\r\n    handleInput(event:ChangeEvent) {\r\n        let elm = event.target as HTMLInputElement;\r\n        this.setState({\r\n            [elm.name] : elm.value\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" name=\"email\" placeholder=\"email address\" value={this.state.email} onChange={this.handleInput}/>\r\n                <br/>\r\n                <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleInput}/>\r\n                <br/>\r\n                <Button variant=\"contained\" color=\"primary\" disabled={!(this.state.email && this.state.password)} onClick={this.doRegister}>Register</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    null, \r\n    dispatch => bindActionCreators(userReduxActions, dispatch)\r\n)(withRouter(RegisterPage));"],"sourceRoot":""}